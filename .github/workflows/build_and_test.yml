name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

  PROTOBUF_VERSION: 3.11.2

  # for postgres client's connection parameter
  PGHOST: postgres
  PGUSER: postgres
  PGPASSWORD: postgres

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain:
          - stable
          - nightly

    # this job running in a docker container
    container: ubuntu

    # service containers to run with this job
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # no POSTGRES_PASSWORD, health check would fail.
        env:
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - run: |
          apt-get update 
          apt-get install --yes software-properties-common pkg-config curl zip git g++ cmake cmake-data postgresql-client libpq-dev
        env:
          DEBIAN_FRONTEND: noninteractive

      # Installing Rust
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools-preview
      - uses: actions/cache@v2
        with:
          path: |
              - $HOME/.cargo/bin/grcov
              - $HOME/.cargo/bin/diesel
          key: cargo-install-${{ runner.os }}-${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v1
      - run: | 
          mkdir -p $HOME/.local/bin
          mkdir -p $HOME/.cargo/bin
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          cargo install grcov
          cargo install diesel_cli --no-default-features --features postgres

      # Installing Protobuf
      - run: |
          curl -L "https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOBUF_VERSION/protoc-$PROTOBUF_VERSION-linux-x86_64.zip" -o protobuf-release.zip
          unzip protobuf-release.zip -d /usr/local
      
      - uses: actions/checkout@v2

      # Initializing database
      - run: |
          psql --version 
          psql -c "create user diesel createdb password 'diesel'"
          psql -c "create database diesel with owner diesel"
          cd $GITHUB_WORKSPACE/database/diesel
          diesel setup
          cd $GITHUB_WORKSPACE

      - run: cargo build --verbose
        
      - if: matrix.toolchain != 'nightly'
        run: cargo test --verbose

      - if: matrix.toolchain == 'nightly'
        run: |
            cargo clean
            cargo test --verbose
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Zinstrument-coverage'
          RUSTDOCFLAGS: '-Cpanic=abort'

      - if: matrix.toolchain == 'nightly'
        id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: .github/configs/grcov.yml
          
      - if: matrix.toolchain == 'nightly'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}