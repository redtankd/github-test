name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

  PROTOBUF_VERSION: 3.11.2

  # for postgres client's connection parameter
  PGHOST: postgres
  PGUSER: postgres
  PGPASSWORD: postgres

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    # this job running in a docker container
    container: postgres

    # service containers to run with this job
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # no POSTGRES_PASSWORD, health check would fail.
        env:
          POSTGRES_PASSWORD: $PGPASSWORD
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      # - run: apt-get update && apt-get install --yes --no-install-recommends postgresql-client

      - run: | 
          mkdir -p $HOME/.local/bin
          mkdir -p $HOME/.cargo/bin
          echo "$HOME/.local/bin:$HOME/.cargo/bin" >> $GITHUB_PATH

      # - run: cargo install grcov

      # Installing Protobuf
      # - run: curl -L "https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOBUF_VERSION/protoc-$PROTOBUF_VERSION-linux-x86_64.zip" -o protobuf-release.zip
      # - run: sudo unzip protobuf-release.zip -d /usr/local

      # Initializing database
      - run: |
          psql -c "create user diesel createdb password 'diesel'"
          psql -c "create database diesel with owner diesel"
      # - run: cargo install --force diesel_cli
      # - run: cd $GITHUB_WORKSPACE/database/diesel
      # - run: diesel setup
      # - run: cd $GITHUB_WORKSPACE

      # - name: Build
        # run: cargo build --verbose
        
      # - name: Run tests
        # run: cargo test --verbose
